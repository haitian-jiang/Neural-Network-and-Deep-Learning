2022-05-23 11:07:40,738 - main.py[line:77] - INFO: {trainer: sketch_transformer, batch_size: 10, num_iterations: 200000, num_epoch: 20, learning_rate: 0.0001, gpu_ids: [0], task_types: ['sketchclsinput'], get_type: single, mask_task_type: task, load_pretrained: pretrained, which_pretrained: ['enc_net'], restore_checkpoint_path: latest_ckpt.pth, dataset: quickdraw_memmap, num_train_samples: 20000000, num_val_samples: 10, num_display_samples: 10, shuffle_val: False, loader_num_workers: 4, sum_path: Oracle5/memmap_sum.txt, offset_path: Oracle5/offsets.npz, cls_limit_path: , mode: train, max_length: 250, max_size: [128, 128], image_size: 224, type_size: 3, mask_prob: 0.85, limit: 1000, stroke_type: stroke-5, input_is_complete: False, max_cls_cache: 345, normalization_type: max_scale, max_scale_factor: 10, each_max_samples: 5000, each_image_max_samples: 100, each_val_samples: 1000, print_every: 100, log_dir: sketch_albert_qd_struct_8_12_768_test_mask_max_scale, checkpoint_every: 2000, save_model_every: 20000, encoder_type: Ori, layers_setting: [[12, 768, 3072], [12, 768, 3072], [12, 768, 3072], [12, 768, 3072], [12, 768, 3072], [12, 768, 3072], [12, 768, 3072], [12, 768, 3072]], output_attentions: False, output_all_states: False, keep_multihead_output: False, input_dim: 5, cls_dim: 345, latent_dim: 128, rel_feat_dim: 128, M: 16, embed_layers_setting: [128, 256, 512], rel_layers_setting: [], cls_layers_setting: [], rec_layers_setting: [512, 256, 128], sketch_embed_type: linear, embed_pool_type: sum, model_type: albert, position_type: learn, segment_type: none, atten_type: single, attention_norm_type: LN, inter_activation: gelu, attention_dropout_prob: 0.5, hidden_dropout_prob: 0.5, output_dropout_prob: 0.5, triplet_margin: 2.0, gamma: 0.1, mask_gmm_weight: 1, rec_gmm_weight: 0, mask_axis_weight: 1, rec_axis_weight: 0, mask_type_weight: 1, rec_type_weight: 0, prediction_weight: 1, triplet_weight: 1, }
2022-05-23 11:07:40,738 - main.py[line:80] - INFO: Initialize the dataset...
2022-05-23 11:07:40,744 - __init__.py[line:257] - INFO: There are 100 iterations per epoch
2022-05-23 11:07:40,745 - __init__.py[line:258] - INFO: Training dataset has 1000 images.
2022-05-23 11:07:40,749 - __init__.py[line:265] - INFO: Val dataset has 1000 images.
2022-05-23 11:07:41,083 - main.py[line:91] - INFO: Finish the dataset initialization.
2022-05-23 11:07:41,092 - trainer.py[line:56] - INFO: Defining Network Structure...
2022-05-23 11:07:41,206 - trainer.py[line:69] - INFO: Sketch Transformer Sturture:
SketchTransformerModel(
  (embedding): SketchEmbedding(
    (embedding): Linear(in_features=5, out_features=128, bias=True)
  )
  (pos_embedding): SketchLearnPositionEmbedding(
    (pos_embedding): Embedding(251, 128)
  )
  (embed_refine_net): SketchEmbeddingRefineNetwork(
    (layers): ModuleList(
      (0): Linear(in_features=128, out_features=256, bias=True)
      (1): Linear(in_features=256, out_features=512, bias=True)
      (2): Linear(in_features=512, out_features=768, bias=True)
    )
  )
  (encoder): SketchALEncoder(
    (sketch_layer): SketchLayer(
      (attention): SketchMultiHeadAttention(
        (attention): SketchSelfAttention(
          (query): Linear(in_features=768, out_features=768, bias=True)
          (key): Linear(in_features=768, out_features=768, bias=True)
          (value): Linear(in_features=768, out_features=768, bias=True)
          (dropout): Dropout(p=0.5, inplace=False)
        )
        (output): SketchOutput(
          (fc): Linear(in_features=768, out_features=768, bias=True)
          (norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.5, inplace=False)
        )
      )
      (inter_layer): SketchIntermediate(
        (fc): Linear(in_features=768, out_features=3072, bias=True)
      )
      (output): SketchOutput(
        (fc): Linear(in_features=3072, out_features=768, bias=True)
        (norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
        (dropout): Dropout(p=0.5, inplace=False)
      )
    )
  )
)
2022-05-23 11:07:46,367 - trainer.py[line:88] - INFO: Finish Construction of Networks.
2022-05-23 11:07:46,369 - trainer.py[line:100] - INFO: Finish Construction of Optimizers.
2022-05-23 11:07:46,369 - trainer.py[line:103] - INFO: Defining Losses...
2022-05-23 11:07:46,370 - trainer.py[line:108] - INFO: Finish Losses.
2022-05-23 11:07:46,370 - trainer.py[line:133] - INFO: Restoring from checkpoint:latest_ckpt.pth
2022-05-23 11:07:46,433 - trainer.py[line:137] - INFO: Restoring netE
